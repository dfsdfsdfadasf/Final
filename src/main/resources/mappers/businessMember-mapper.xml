<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bMem">

	<select id="dupleCheck" resultType="int">
		select count(*) from business_member where id=#{value}
	</select>

    <insert id="signup">
		insert into business_member values(business_member_seq.nextval, #{id}, #{pw}, 
		#{name},#{email},#{phone},'N',default)
	</insert>
<!-- 	<insert id="signup"> -->
<!-- 		insert into business_member(seq, id,pw,name,email,phone,type,regNum,businessName,businessNameEng, businessContact, address1, address2, postcode,address1kor,reg_date,premium)  -->
<!-- 		values(business_member_seq.nextval, #{id}, #{pw},  -->
<!-- 		#{name},#{email},#{phone},#{type},#{regNum},#{businessName},#{businessNameEng},#{businessContact}, -->
<!-- 		#{address1},#{address2},#{postcode},#{address1Kor},sysdate,'N') -->
<!-- 	</insert> -->
	
	
	<select id="loginProc" resultType="int">
		select count(*) from business_member where id=#{id} and pw=#{pw}
	</select>
	
	<delete id="signOut">
		delete from business_member where id=#{value}
	</delete>
	
	<select id="getInfo" resultType="dream.tk.dto.BusinessMemberDTO">
		select * from business_member where id=#{value}
	</select>
	
	<update id="editPersonalInfo">
	  update business_member set pw=#{pw},name=#{name},email=#{email},phone=#{phone} where id=#{id}
	</update>

	
	<select id="getBizInfo" resultType="dream.tk.dto.BusinessDTO">
		select * from business where seq=#{value}
	</select>
	
	<select id="findID" resultType="String">
		select id from business_member where name=#{name} and email=#{email}
	</select>
	
	<select id="findPW" resultType="String">
		select id from business_member where id=#{id} and name=#{name} and email=#{email}
	</select>
	
	<update id="changePW">
		update business_member set pw=#{pw} where id=#{id}
	</update>
	
	<update id="editBizInfo">
	  update business set biz_type=#{biz_type},bizNum=#{bizNum},businessName=#{businessName},
	  businessNameEng=#{businessName}, businessContact=#{businessContact}, address1=#{address1}, address2=#{address2}, postcode=#{postcode},address1Kor=#{address1Kor}, offday=#{offday} 
	  where seq=#{seq}
	</update>
	
	
	
	<select id="getReserveAge" resultType="HashMap">
	
		select 연령대,count(연령대) from
 		(select name,
      	<![CDATA[ case when to_char(sysdate,'yyyy')-to_char(yearofbirth) <= 19  then '10대'
            when to_char(sysdate,'yyyy')-to_char(yearofbirth) <= 29  then '20대'
            when to_char(sysdate,'yyyy')-to_char(yearofbirth) <= 39 then '30대'
            when to_char(sysdate,'yyyy')-to_char(yearofbirth) <= 49  then '40대']]>
            else '50대 이상'
      	 end as 연령대
		from  reservation r, client_member c where r.userid = c.id and r.res_name=#{value}) group by 연령대 order by 연령대
	
	</select>
	
</mapper>